#include <pvdef.h>

#define DELETE							(0x00010000L)
#define READ_CONTROL					(0x00020000L)
#define WRITE_DAC						(0x00040000L)
#define WRITE_OWNER						(0x00080000L)
#define SYNCHRONIZE						(0x00100000L)

#define STANDARD_RIGHTS_REQUIRED		(0x000F0000L)

#define STANDARD_RIGHTS_READ			(READ_CONTROL)
#define STANDARD_RIGHTS_WRITE			(READ_CONTROL)
#define STANDARD_RIGHTS_EXECUTE			(READ_CONTROL)

#define STANDARD_RIGHTS_ALL				(0x001F0000L)

#define SPECIFIC_RIGHTS_ALL				(0x0000FFFFL)

#define GENERIC_ALL						0x10000000
#define GENERIC_EXECUTE					0x20000000
#define GENERIC_WRITE					0x40000000
#define GENERIC_READ					0x80000000

#define FILE_READ_DATA					0x1
#define FILE_LIST_DIRECTORY				0x1
#define FILE_WRITE_DATA					0x2
#define FILE_ADD_FILE					0x2
#define FILE_ADD_SUBDIRECTORY			0x4
#define FILE_APPEND_DATA				0x4
#define FILE_CREATE_PIPE_INSTANCE		0x4
#define FILE_READ_EA					0x8
#define FILE_WRITE_EA					0x10
#define FILE_EXECUTE					0x20
#define FILE_TRAVERSE					0x20
#define FILE_DELETE_CHILD				0x40
#define FILE_READ_ATTRIBUTES			0x80
#define FILE_WRITE_ATTRIBUTES			0x100

#define FILE_BEGIN 						0
#define FILE_CURRENT					1
#define FILE_END						2

typedef PVOID HANDLE;

HANDLE PvCreateFileA(IN PSTR FilePath,IN ULONG DesiredAccess,IN ULONG ShareMode,IN ULONG Disposition,IN ULONG Flags);
BOOL PvCloseFile(IN HANDLE FileHandle);
BOOL PvReadFile(IN HANDLE FileHandle,OUT PVOID Buffer,IN ULONG NumberOfBytes);
BOOL PvWriteFile(IN HANDLE FileHandle,IN PVOID Buffer,IN ULONG NumberOfBytes);
BOOL PvSetFilePointer(IN HANDLE FileHandle,IN LONG64 DistanceToMove,IN ULONG MoveMethod);